struct ParkingSystem {
    // Number of empty slots for each type of car
    empty: [i32; 3],
}

impl ParkingSystem {
    fn new(big: i32, medium: i32, small: i32) -> Self {
        Self {
            empty: [big, medium, small],
        }
    }

    fn add_car(&mut self, car_type: i32) -> bool {

        // If space is available, allocate and return True
        if self.empty[(car_type - 1) as usize] > 0 {
            self.empty[(car_type - 1) as usize] -= 1;
            return true;
        }

        // Else, return False
        return false;
    }
}