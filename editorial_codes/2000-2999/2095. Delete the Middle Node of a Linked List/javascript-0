var deleteMiddle = function(head) {
    // Edge case: return None if there is only one node
    if (head.next == null)
        return null;
    
    let count = 0;
    let p1 = head, p2 = head;
    
    // First pass, count the number of nodes in the linked list using 'p1'.
    while (p1 != null) {
        count++;
        p1 = p1.next;
    }
    
    // Get the index of the node to be deleted.
    let middleIndex = Math.floor(count / 2);
    
    // Second pass, let 'p2' move toward the predecessor of the middle node.
    for (let i = 0; i < middleIndex - 1; ++i)
        p2 = p2.next;
    
    // Delete the middle node and return 'head'.
    p2.next = p2.next.next;
    return head;
};