class Solution {

    /**
     * @param String $senate
     * @return String
     */
    function predictPartyVictory($senate) {
        
        // Count of Each Type of Senator to check for Winner
        $rCount = substr_count($senate, 'R');
        $dCount = strlen($senate) - $rCount;

        // To mark Banned Senators
        $banned = array_fill(0, strlen($senate), false);

        // Ban the candidate "toBan", immediate next to "startAt"
        $ban = function($toBan, $startAt) use (&$senate, &$banned) {
            // Find the next eligible senator of "toBan" type
            // On found, mark him as banned
            while (true) {
                if ($senate[$startAt] == $toBan && !$banned[$startAt]) {
                    $banned[$startAt] = true;
                    break;
                }
                $startAt = ($startAt + 1) % strlen($senate);
            }
        };

        // Turn of Senator at this Index
        $turn = 0;

        // While both parties have at least one senator
        while ($rCount > 0 && $dCount > 0) {

            if (!$banned[$turn]) {
                if ($senate[$turn] == 'R') {
                    $ban('D', ($turn + 1) % strlen($senate));
                    $dCount--;
                } else {
                    $ban('R', ($turn + 1) % strlen($senate));
                    $rCount--;
                }
            }

            $turn = ($turn + 1) % strlen($senate);
        }

        // Return Winner depending on the count of each party
        return $dCount == 0 ? "Radiant" : "Dire";
    }
}